@startuml
!theme mono

class EmailClassifierFacade {
    + add_preprocessing(feature: str): void
}

abstract class DataProcessorBase {
    + process(df: pd.DataFrame): pd.DataFrame
}

class ConcreteDataProcessor {
    + process(df: pd.DataFrame): pd.DataFrame
}

abstract class DataProcessorDecorator {
    - _processor: DataProcessorBase
    + DataProcessorDecorator(processor: DataProcessorBase)
    + process(df: pd.DataFrame): pd.DataFrame
}

class NoiseRemovalDecorator {
    - _processor: DataProcessorBase
    + NoiseRemovalDecorator(processor: DataProcessorBase)
    + process(df: pd.DataFrame): pd.DataFrame
}

class TranslatorDecorator {
    - _processor: DataProcessorBase
    + TranslatorDecorator(processor: DataProcessorBase)
    + process(df: pd.DataFrame): pd.DataFrame
}

class UnicodeConversionDecorator {
    - _processor: DataProcessorBase
    + UnicodeConversionDecorator(processor: DataProcessorBase)
    + process(df: pd.DataFrame): pd.DataFrame
}

class DataProcessorDecoratorFactory {
    + create_data_preprocessor(processor: DataProcessorBase, feature: str): DataProcessorDecorator
}

EmailClassifierFacade o-- DataProcessorBase
DataProcessorBase <|-- ConcreteDataProcessor
DataProcessorBase <|-- DataProcessorDecorator
DataProcessorDecorator <|-- NoiseRemovalDecorator
DataProcessorDecorator <|-- TranslatorDecorator
DataProcessorDecorator <|-- UnicodeConversionDecorator

EmailClassifierFacade --> DataProcessorDecoratorFactory: uses
DataProcessorDecoratorFactory --> DataProcessorBase: creates and decorates

@enduml
