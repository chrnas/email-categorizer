@startuml
!theme mono

class Client  {
    - email_classifiers: list[EmailClassifierFacade]
    - command_invoker: CommandInvoker
    - config_manager: ClassifierConfigSingleton
    + __init__()
    + handle_input(args): bool
}

class CommandInvoker {
    + _command: Command
    + set_command(command: Command): void
    + execute_command(command: Command): void
    + undo(): void
}

abstract class Command {
    + execute(): void
    + undo(): void
}

class EmailClassifierFactory {
    + create_email_classifier(): EmailClassifierFacade
}

class EmailClassifierFacade {
    + train_model(path: str): void
    + classify_email(): void
    + add_emails(path: str): void
    + change_strategy(strategy: str): void
    + display_evaluation(): void
}

class ListEmailClassifiersCommand {
    - email_classifiers: list[EmailClassifierFacade]
}

class ChooseEmailClassifierCommand {
    - email_classifiers: list[EmailClassifierFacade]
    - name: str
}

class CreateEmailClassifierCommand {
    - email_classifiers: list[EmailClassifierFacade]
    - path: str
    - embedding: str
    - model: str
    - name: str
}

class RemoveEmailClassifierCommand {
    - email_classifiers: list[EmailClassifierFacade]
    - name: str
}

Client o-- "1..*" EmailClassifierFacade : manages
Client o-- CommandInvoker
CommandInvoker o-- "1" Command : sets and invokes

Command <|-- ListEmailClassifiersCommand
Command <|-- ChooseEmailClassifierCommand
Command <|-- CreateEmailClassifierCommand
Command <|-- RemoveEmailClassifierCommand

Client --> Command: creates and invokes
Command --> "1..*" EmailClassifierFacade : operates on

CreateEmailClassifierCommand --> EmailClassifierFactory : uses
EmailClassifierFactory ..> EmailClassifierFacade : creates

@enduml
