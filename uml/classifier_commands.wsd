@startuml
!theme mono

class Client  {
    - email_classifiers: list[EmailClassifierFacade]
    - command_invoker: CommandInvoker
    - config_manager: ClassifierConfigSingleton
    + __init__()
    + handle_input(args): bool
}

class CommandInvoker {
    - _command: Command
    + set_command(command: Command): void
    + execute_command(command: Command): void
    + undo(): void
}

class Command {
    + execute(): void
    + undo(): void
}

class AddEmailsCommand {
    - email_classifier: EmailClassifierFacade
    - path: str
}

class ClassifyEmailCommand {
    - email_classifier: EmailClassifierFacade
}

class ChangeStrategyCommand {
    - email_classifier: EmailClassifierFacade
    - model_type: str
}

class AddPreprocessingCommand {
    - email_classifier: EmailClassifierFacade
    - feature: str
}

class TrainModelCommand {
    - email_classifier: EmailClassifierFacade
    - path: str
}

class DisplayEvaluationCommand {
    - email_classifier: EmailClassifierFacade
}

class EmailClassifierFacade {
    + train_model(path: str): void
    + classify_email(): void
    + add_emails(path: str): void
    + change_strategy(strategy: str): void
    + display_evaluation(): void
}

class ClassifierConfigSingleton {
    - data_folder_path: str
}

Client o-- "1..*" EmailClassifierFacade : manages
Client o-- CommandInvoker
CommandInvoker o-- "1" Command : sets and invokes
Command <|-- AddEmailsCommand
Command <|-- ClassifyEmailCommand
Command <|-- ChangeStrategyCommand
Command <|-- AddPreprocessingCommand
Command <|-- TrainModelCommand
Command <|-- DisplayEvaluationCommand
Client o-left- ClassifierConfigSingleton : uses

Command --> EmailClassifierFacade : operates on
Client --> Command : creates 

@enduml
